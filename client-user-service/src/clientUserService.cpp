//============================================================================
// Name        : clientUserService.cpp
// Author      : Kiran Mohan E
// Version     :
// Copyright   : Copyright (c) 2016 Kiran Mohan E,  All Rights Reserved.
// Description : User Service using ONC RPC. This file defines the
//               user service remote protocol.
//============================================================================

#include <iostream>
#include "userService.h" /* user-service.h generated by rpcgen
                            from lib-user-service/user-service.x*/
using namespace std;

class ClientUserService {

    CLIENT * clnt;
    const char * const server;

public:

    /**
     * Constructs initializes client handle to
     * remote user service
     */
    ClientUserService(const char * const remoteServer) :
            server(remoteServer) {
        /*
         * Create client "handle" used for
         * calling USER_SERVICE on the server
         * designated on the command line.
         */

        clnt = clnt_create(server, USER_SERVICE, USER_SERVICE_VERS, "tcp");

        if (clnt == NULL) {
            /*
             * Couldn't establish connection
             * with server.
             * Print error message and die.
             */

            clnt_pcreateerror(server);
            exit(1);
        }
    }

    /**
     * Destructor closes the connection to the remote service
     */
    ~ClientUserService() {
        clnt_destroy(clnt);
    }

    bool signUp(char * username, char * password) {
        user_profile userProfile;
        userProfile.username = username;
        userProfile.password = password;
        /*
         * Call the remote procedure
         * "sign_up" on the server
         */
        result * res = sign_up_1(&userProfile, clnt);
        if (res == NULL) {
            /*
             * An error occurred while calling
             * the server.
             * Print error message and die.
             */

            clnt_perror(clnt, server);
            exit(1);
        }

        /* Okay, we successfully called
         * the remote procedure.
         */

        if (res->status != 0) {
            cerr << "ERROR: Could not sign up " << username << endl;
            return false;
        } else {
            cout << res->resultData << endl;
            return true;
        }

    }

};

int main(int argc, char **argv) {

    if (argc != 2) {
        cerr << "usage: " << argv[0] << " host" << endl;
        ;
        exit(1);
    }

    char *server = argv[1];
    ClientUserService userServiceClient(server);
    userServiceClient.signUp("kiran", "password");

    return 0;
}
